{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","mapDispatchToProps","getLogs","state","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","err","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a228c85.chunk.js","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from \"./types\";\n\n// export const getLogs = () => {\n//   return async dispatch => {\n//     setLoading();\n\n//     const res = await fetch('/logs');\n//     const data = await res.json();\n\n//     dispatch({\n//       type: GET_LOGS,\n//       payload: data\n//     });\n//   };\n// };\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/logs\", {\n      method: \"POST\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n\n    await fetch(`/logs/${id}`, {\n      method: \"DELETE\"\n    });\n\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Update log on server\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs/${log.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    const data = await res.json();\n\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const searchLogs = text => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n};\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n};\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { searchLogs } from \"../../actions/logActions\";\n\nconst SearchBar = ({ searchLogs }) => {\n  const text = useRef(\"\");\n\n  const onChange = e => {\n    searchLogs(text.current.value);\n  };\n\n  return (\n    <nav style={{ marginBottom: \"30px\" }} className=\"blue\">\n      <div className=\"nav-wrapper\">\n        <form>\n          <div className=\"input-field\">\n            <input\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"Search Logs..\"\n              ref={text}\n              onChange={onChange}\n            />\n            <label className=\"label-icon\" htmlFor=\"search\">\n              <i className=\"material-icons\">search</i>\n            </label>\n            <i className=\"material-icons\">close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nSearchBar.propTypes = {\n  searchLogs: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { searchLogs }\n)(SearchBar);\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteLog, setCurrent } from \"../../actions/logActions\";\n\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    deleteLog(log.id);\n    M.toast({ html: \"Log Delete\" });\n  };\n\n  return (\n    <li className=\"collection-item\">\n      <div>\n        <a\n          href=\"#edit-log-modal\"\n          className={`modal-trigger ${\n            log.attention ? \"red-text\" : \"blue-text\"\n          }`}\n          onClick={() => setCurrent(log)}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span className=\"grey-text\">\n          <span className=\"black-text\">ID #{log.id}</span> last updated bby {\"\"}\n          <span className=\"black-text\">{log.tech}</span> on{\" \"}\n          <Moment format=\"MMMM Do\">{log.date}</Moment>\n        </span>\n        <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\n          <i className=\"material-icons grey-text\">delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteLog, setCurrent }\n)(LogItem);\n","import React from 'react'\n\nconst Preloader = () => {\n    return (\n        <div className=\"progress blue lighten-4\">\n            <div className='indeterminate blue' />\n        </div>\n    )\n}\n\nexport default Preloader","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\nimport { getLogs } from \"../../actions/logActions\";\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n  }, [getLogs]);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className=\"collection with-header\">\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className=\"center\">No logs to show...</p>\n      ) : (\n        logs.map(log => <LogItem log={log} key={log.id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nconst mapDispatchToProps = {\n  getLogs\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Logs);\n","import React from \"react\";\n\nconst AddBtn = () => {\n  return (\n    <div className=\"fixed-action-btn\">\n      <a\n        href=\"#add-log-modal\"\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\n      >\n        <i className=\"large material-icons\">add</i>\n      </a>\n      <ul>\n        <li>\n          <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\">\n              <i className='material-icons'>person</i>\n          </a>\n        </li>\n        <li>\n          <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\n              <i className='material-icons'>person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default AddBtn;\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from \"./types\";\n\nexport const getTechs = () => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/techs\");\n    const data = await res.json();\n\n    dispatch({\n      type: GET_TECHS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const addTech = (tech) => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch('/techs', {\n          method: 'POST',\n          body: JSON.stringify(tech),\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      });\n\n      const data = await res.json();\n  \n      dispatch({\n        type: ADD_TECH,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: TECHS_ERROR,\n        payload: err.response.statusText\n      });\n    }\n  };\n\n  export const deleteTech = (id) => async dispatch => {\n    try {\n      setLoading();\n  \n      fetch(`/techs/${id}`, {\n          method: 'DELETE'\n      });\n  \n      dispatch({\n        type: DELETE_TECH,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: TECHS_ERROR,\n        payload: err.response.statusText\n      });\n    }\n  };\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n    useEffect(() => {\n        getTechs();\n    }, [getTechs]);\n\n    return (\n        !loading && techs !== null && techs.map(t => <option key={t.id} value= {`${t.firstName} ${t.lastName}`}>\n            {t.firstName} {t.lastName}\n        </option> )\n    )\n}\n\nTechSelectOptions.propTypes = {\n    tech: PropTypes.object.isRequired,\n    getTechs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    tech: state.tech\n})\n\nexport default connect(mapStateToProps, {getTechs})(TechSelectOptions)","import React, { useState } from \"react\";\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addLog } from '../../actions/logActions'\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddLogModal = ({ addLog }) => {\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const onSubmit = () => {\n      if(message === '' || tech === '') {\n          M.toast({ html: 'Please enter a message and tech' });\n      } else {\n        const newLog = {\n          message,\n          attention,\n          tech,\n          date: new Date()\n        }\n\n        addLog(newLog);\n\n        M.toast({ html: `Log added by ${tech}` });\n\n        setMessage('');\n        setTech('');\n        setAttention(false);\n      }\n  }\n\n  return (\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            <label htmlFor=\"message\" className=\"active\">\n              Log Message\n            </label>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n}\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nexport default connect(null, { addLog })(AddLogModal);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { updateLog } from '../../actions/logActions';\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and tech' });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n\n      updateLog(updLog);\n      M.toast({ html: `Log updated by ${tech}` });\n\n      // Clear Fields\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            \n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n              </select>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateLog }\n)(EditLogModal);\n","import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addTech } from '../../actions/techActions'\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst AddTechModal = ({ addTech }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const onSubmit = () => {\n    if (firstName === \"\" || lastName === \"\") {\n      M.toast({ html: \"Please enter the first and last name\" });\n    } else {\n      addTech({\n        firstName,\n        lastName\n      })\n\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\n\n      setFirstName(\"\");\n      setLastName(\"\");\n    }\n  };\n\n  return (\n    <div id=\"add-tech-modal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <h4>New Technician</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={e => setFirstName(e.target.value)}\n            />\n            <label htmlFor=\"firstName\" className=\"active\">\n              First Name\n            </label>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={e => setLastName(e.target.value)}\n            />\n            <label htmlFor=\"lastName\" className=\"active\">\n              Last Name\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddTechModal.propTypes = {\n  addTech: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addTech })(AddTechModal);\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { deleteTech } from '../../actions/techActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\nconst onDelete = () => {\n  deleteTech(id);\n  M.toast({ html: 'Technician deleted' });\n}\n\n  return (\n    <li className=\"collection-item\">\n      <div>\n        {firstName} {lastName}\n        <a href=\"#!\" className=\"secondary-content\" onClick={() => onDelete()}>\n          <i className=\"material-icons grey-text\">delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\n\nTechItem.propTypes = {\n  tech: PropTypes.object.isRequired,\n  deleteTech: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteTech })(TechItem);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TechItem from \"./TechItem\";\nimport { getTechs } from '../../actions/techActions';\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n  }, [getTechs]);\n\n  return (\n    <div id=\"tech-list-modal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <h4>Technician List</h4>\n        <ul className=\"collection\">\n          {!loading &&\n          techs !== null &&\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from \"../actions/types\";\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map(log =>\n          log.id === action.payload.id ? action.payload : log\n        )\n      };\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from \"../actions/types\";\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false\n      };\n      case DELETE_TECH:\n          return {\n              ...state,\n              techs: state.techs.filter(tech => tech.id !== action.payload),\n              loading: false\n          }\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport logReducer from './logReducer';\nimport techReducer from './techReducer';\n\nexport default combineReducers({\n    log: logReducer,\n    tech: techReducer\n});","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from \"react\";\nimport SearchBar from \"./components/layout/SearchBar\";\nimport Logs from \"./components/logs/Logs\";\nimport AddBtn from \"./components/layout/AddBtn\";\nimport AddLogModal from \"./components/logs/AddLogModal\";\nimport EditLogModal from \"./components/logs/EditLogModal\";\nimport AddTechModal from \"./components/techs/AddTechModal\";\nimport TechListModal from \"./components/techs/TechListModal\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport \"./App.css\";\n\nconst App = () => {\n  useEffect(() => {\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}